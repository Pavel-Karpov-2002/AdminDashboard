// <auto-generated />
using System;
using AdminDashboard.DbStuff;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminDashboard.Migrations
{
    [DbContext(typeof(SocialNetworkWebDbContext))]
    [Migration("20250616092218_AddPaymentTableAndSeparateTokenToUserToken")]
    partial class AddPaymentTableAndSeparateTokenToUserToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.17");

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("TEXT");

                    b.Property<int>("TokenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameToken")
                        .HasColumnType("TEXT");

                    b.Property<float>("Rate")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.UserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountToken")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TokenId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TokenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.Payment", b =>
                {
                    b.HasOne("AdminDashboard.DbStuff.Models.Token", "Token")
                        .WithMany("UserPayments")
                        .HasForeignKey("TokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminDashboard.DbStuff.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Token");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.UserToken", b =>
                {
                    b.HasOne("AdminDashboard.DbStuff.Models.Token", "Token")
                        .WithMany("UserTokens")
                        .HasForeignKey("TokenId");

                    b.HasOne("AdminDashboard.DbStuff.Models.User", "User")
                        .WithMany("TokenBalance")
                        .HasForeignKey("UserId");

                    b.Navigation("Token");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.Token", b =>
                {
                    b.Navigation("UserPayments");

                    b.Navigation("UserTokens");
                });

            modelBuilder.Entity("AdminDashboard.DbStuff.Models.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("TokenBalance");
                });
#pragma warning restore 612, 618
        }
    }
}
